Description: Price-migration orchestration engine.

Parameters:

  Stage:
    Type: String
    AllowedValues:
      - PROD
      - CODE
      - DEV
    Default: DEV

  ResourceNamePrefix:
    Type: String
    Default: price-migration-engine

Resources:

  CohortStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/states/${ResourceNamePrefix}-cohort-steps-${Stage}
      RetentionInDays: 180

  CohortStateMachineExecutionRole:
    Type: AWS::IAM::Role
    DependsOn:
      - CohortStateMachineLogGroup
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Effect: Allow
          Principal:
            Service: !Sub states.${AWS::Region}.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaInvokePolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - Fn::ImportValue: !Sub membership-${Stage}-${ResourceNamePrefix}-lambda-EstimatingLambda
                  - Fn::ImportValue: !Sub membership-${Stage}-${ResourceNamePrefix}-lambda-CreatingSalesforceRecordsLambda
                  - Fn::ImportValue: !Sub membership-${Stage}-${ResourceNamePrefix}-lambda-NotifyingSubscribersLambda
                  - Fn::ImportValue: !Sub membership-${Stage}-${ResourceNamePrefix}-lambda-AmendingLambda
                  - Fn::ImportValue: !Sub membership-${Stage}-${ResourceNamePrefix}-lambda-UpdatingSalesforceWithAmendsLambda
        - PolicyName: LoggingPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - logs:ListLogDeliveries
                  - logs:GetLogDelivery
                  - logs:CreateLogDelivery
                  - logs:UpdateLogDelivery
                  - logs:DescribeLogGroups
                Resource:
                  - "*"

  CohortStateMachine:
    Type: AWS::StepFunctions::StateMachine
    DependsOn:
      - CohortStateMachineLogGroup
      - CohortStateMachineExecutionRole
    Properties:
      StateMachineName:
        !Sub ${ResourceNamePrefix}-cohort-steps-${Stage}
      RoleArn: !GetAtt CohortStateMachineExecutionRole.Arn
      LoggingConfiguration:
        Level: ALL
        IncludeExecutionData: TRUE
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt CohortStateMachineLogGroup.Arn
      DefinitionString:
        !Sub
        - |
          {
            "Comment": "Price-migration orchestration engine.",
            "StartAt": "Estimating",
            "States": {
              "Estimating": {
                "Type": "Task",
                "Comment": "Calculating start date and new price for each sub in this cohort.",
                "Resource": "${EstimatingLambdaArn}",
                "InputPath": "$.cohortSpec",
                "ResultPath": "$.result",
                "Retry": [
                  {
                    "ErrorEquals": [
                      "States.ALL"
                    ],
                    "IntervalSeconds": 30,
                    "MaxAttempts": 25000,
                    "BackoffRate": 2.0
                  }
                ],
                "Next": "IsEstimatingComplete"
              },
              "IsEstimatingComplete": {
                "Type": "Choice",
                "Comment": "Is the estimating step complete?",
                "Choices": [
                {
                  "Variable": "$.result.isComplete",
                  "BooleanEquals": false,
                  "Next": "Estimating"
                }
                ],
                "Default": "CreatingSalesforceRecords"
              },
              "CreatingSalesforceRecords": {
                "Type": "Task",
                "Comment": "Inserting a price-rise record for each sub in this cohort into Salesforce.",
                "Resource": "${CreatingSalesforceRecordsLambdaArn}",
                "InputPath": "$.cohortSpec",
                "ResultPath": "$.result",
                "Retry": [
                  {
                    "ErrorEquals": [
                      "States.ALL"
                    ],
                    "IntervalSeconds": 30,
                    "MaxAttempts": 25000,
                    "BackoffRate": 2.0
                  }
                ],
                "Next": "IsCreatingSalesforceRecordsComplete"
              },
              "IsCreatingSalesforceRecordsComplete": {
                "Type": "Choice",
                "Comment": "Is the creating Salesforce records step complete?",
                "Choices": [
                {
                  "Variable": "$.result.isComplete",
                  "BooleanEquals": false,
                  "Next": "CreatingSalesforceRecords"
                }
                ],
                "Default": "Amending"
              },
              "NotifyingSubscribers": {
                "Type": "Task",
                "Resource": "${NotifyingSubscribersLambdaArn}",
                "Next": "Amending"
              }
              "Amending": {
                "Type": "Task",
                "Comment": "Applying price-rise amendment in Zuora on each sub in this cohort.",
                "Resource": "${AmendingLambdaArn}",
                "InputPath": "$.cohortSpec",
                "ResultPath": "$.result",
                "Retry": [
                  {
                    "ErrorEquals": [
                      "States.ALL"
                    ],
                    "IntervalSeconds": 30,
                    "MaxAttempts": 25000,
                    "BackoffRate": 2.0
                  }
                ],
                "Next": "IsAmendingComplete"
              },
              "IsAmendingComplete": {
                "Type": "Choice",
                "Comment": "Is the amending step complete?",
                "Choices": [
                {
                  "Variable": "$.result.isComplete",
                  "BooleanEquals": false,
                  "Next": "Amending"
                }
                ],
                "Default": "UpdatingSalesforceWithAmendments"
              },
              "UpdatingSalesforceWithAmendments": {
                "Type": "Task",
                "Comment": "Updating price-rise record for each sub in this cohort with amendment evidence.",
                "Resource": "${UpdatingSalesforceWithAmendsLambdaArn}",
                "InputPath": "$.cohortSpec",
                "ResultPath": "$.result",
                "Retry": [
                  {
                    "ErrorEquals": [
                      "States.ALL"
                    ],
                    "IntervalSeconds": 30,
                    "MaxAttempts": 25000,
                    "BackoffRate": 2.0
                  }
                ],
                "Next": "IsUpdatingSalesforceWithAmendmentsComplete"
              },
              "IsUpdatingSalesforceWithAmendmentsComplete": {
                "Type": "Choice",
                "Comment": "Is the updating Salesforce with amendments step complete?",
                "Choices": [
                {
                  "Variable": "$.result.isComplete",
                  "BooleanEquals": false,
                  "Next": "UpdatingSalesforceWithAmendments"
                }
                ],
                "Default": "Complete"
              },
              "Complete": {
                "Type": "Succeed",
                "Comment": "All steps are complete."
              }
            }
          }
        - EstimatingLambdaArn:
            Fn::ImportValue: !Sub membership-${Stage}-${ResourceNamePrefix}-lambda-EstimatingLambda
          CreatingSalesforceRecordsLambdaArn:
            Fn::ImportValue: !Sub membership-${Stage}-${ResourceNamePrefix}-lambda-CreatingSalesforceRecordsLambda
          NotifyingSubscribersLambdaArn:
            Fn::ImportValue: !Sub membership-${Stage}-${ResourceNamePrefix}-lambda-NotifyingSubscribersLambda
          AmendingLambdaArn:
            Fn::ImportValue: !Sub membership-${Stage}-${ResourceNamePrefix}-lambda-AmendingLambda
          UpdatingSalesforceWithAmendsLambdaArn:
            Fn::ImportValue: !Sub membership-${Stage}-${ResourceNamePrefix}-lambda-UpdatingSalesforceWithAmendsLambda
